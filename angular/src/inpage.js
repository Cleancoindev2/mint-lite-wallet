"use strict";!function(){var e={},t=(t,n)=>new Promise((r,a)=>{let s=Math.random().toString(36).substr(2,9);e[s]=[r,a],window.postMessage({type:"question",id:s,resource:t,data:JSON.stringify(n)},"*")});window.addEventListener("message",t=>{t&&t.data&&"answer"===t.data.type&&t.data.id in e&&(e[t.data.id][t.data.isSuccess?0:1](t.data.data),delete e[t.data.id])});window.GoldMint=new class{constructor(){}getAccount(){return t("getAccount")}getCurrentNetwork(){return t("getCurrentNetwork")}getBalance(e){return t("getBalance",{address:e})}sendTransaction(e,n,r){return t("sendTransaction",{to:e,token:n,amount:r})}openSendTokenPage(e,n,r=0){return t("openSendTokenPage",{address:e,token:n.toLowerCase(),amount:r})}signMessage(e,n=null){return t("signMessage",{bytes:e,publicKey:n})}verifySignature(e,n,r){let a;if(e&&"object"==typeof e&&n&&r||(a=null),window.SumusLib&&window.SumusLib.Signer&&window.SumusLib.Signer.Verify)try{a=window.SumusLib.Signer.Verify(e,n,r)}catch(e){a=null}else a=null;return t("verifySignature",{result:a})}}}();
